version: '3.8'

services:
  # Serveur Hive
  hive:
    build:
      context: .
      dockerfile: Dockerfile
    image: osiris-hive:latest
    container_name: osiris-hive
    restart: unless-stopped
    ports:
      - "8000:8000"  # API REST
      - "8001:8001"  # gRPC
      - "8002:8002"  # WebSocket
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./certs:/app/certs
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=osiris
      - DB_USER=osiris
      - DB_PASSWORD=osiris
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DB=osiris
      - CLICKHOUSE_USER=osiris
      - CLICKHOUSE_PASSWORD=osiris
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=osiris
    depends_on:
      - postgres
      - clickhouse
      - redis

  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: osiris-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=osiris
      - POSTGRES_USER=osiris
      - POSTGRES_PASSWORD=osiris
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U osiris"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base de données ClickHouse
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: osiris-clickhouse
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "8123:8123"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_DB=osiris
      - CLICKHOUSE_USER=osiris
      - CLICKHOUSE_PASSWORD=osiris
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: osiris-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass osiris
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Interface Web
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: osiris-web:latest
    container_name: osiris-web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./web:/app
      - ./certs:/etc/nginx/certs
    environment:
      - NODE_ENV=production
    depends_on:
      - hive

volumes:
  postgres_data:
  clickhouse_data:
  redis_data: 